name: CI
on: [push, pull_request]
jobs:
  test:
    name: Test
    strategy:
      matrix:
        pg-version: ['10', '11', '12']
        pgis-version: ['2.5', '3.0']
        exclude:
          - pg-version: '10'
            pgis-version: '3.0'
          - pg-version: '11'
            pgis-version: '3.0'
          - pg-version: '12'
            pgis-version: '2.5'
    runs-on: ubuntu-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v1

    - name: Install Redis
      uses: zhulik/redis-action@v1.0.0
      with:
        redis version: '5'

    - name: Install PostgreSQL
      uses: brianhlin/postgis-action@official-postgis-image
      with:
        postgresql db: 'mailroom_test'
        postgresql user: 'mailroom_test'
        postgresql password: 'temba'
        postgresql version: ${{ matrix.pg-version }}
        postgis version: ${{ matrix.pgis-version }}

    - name: Install Linux packages
      run: sudo apt install -y --no-install-recommends postgresql-client

    - name: Initialize database
      env:
        PGPASSWORD: 'temba'
      run: |
        psql -h localhost -U postgres -c "ALTER ROLE mailroom_test WITH SUPERUSER;"

    - name: Install Go
      uses: actions/setup-go@v1
      with:
        go-version: 1.13.x

    - name: Run tests
      run: go test -p=1 -coverprofile=coverage.text -covermode=atomic ./...

    - name: Upload coverage
      if: success()
      uses: codecov/codecov-action@v1
      with:
        token: ${{ secrets.CODECOV_TOKEN }}
        fail_ci_if_error: true
  
  release:
    name: Release
    needs: [test]
    if: startsWith(github.ref, 'refs/tags/')
    runs-on: ubuntu-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v1

    - name: Fetch GoFlow docs
      run: |
        export GOFLOW_VERSION=$(grep goflow go.mod | cut -d" " -f2)
        curl https://codeload.github.com/nyaruka/goflow/tar.gz/$GOFLOW_VERSION | tar --wildcards --strip=1 -zx "*/docs/*"

    - name: Install Go
      uses: actions/setup-go@v1
      with:
        go-version: 1.13.x

    - name: Publish release
      uses: goreleaser/goreleaser-action@v1
      with:
        version: latest
        args: release --rm-dist
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
